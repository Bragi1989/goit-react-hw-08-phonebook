{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = prependToMemberExpression;\nvar _index = require(\"../builders/generated/index.js\");\nvar _index2 = require(\"../index.js\");\nfunction prependToMemberExpression(member, prepend) {\n  if ((0, _index2.isSuper)(member.object)) {\n    throw new Error(\"Cannot prepend node to super property access (`super.foo`).\");\n  }\n  member.object = (0, _index.memberExpression)(prepend, member.object);\n  return member;\n}","map":{"version":3,"mappings":";;;;;;AAAA;AACA;AAMe,SAASA,yBAAyBA,CAE/CC,MAAS,EAAEC,OAAqC,EAAK;EACrD,IAAI,mBAAO,EAACD,MAAM,CAACE,MAAM,CAAC,EAAE;IAC1B,MAAM,IAAIC,KAAK,CACb,6DACF,CAAC;EACH;EACAH,MAAM,CAACE,MAAM,GAAG,2BAAgB,EAACD,OAAO,EAAED,MAAM,CAACE,MAAM,CAAC;EAExD,OAAOF,MAAM;AACf","names":["prependToMemberExpression","member","prepend","object","Error"],"sources":["D:\\GitHub\\goit-react-hw-08-phonebook\\node_modules\\@babel\\types\\src\\modifications\\prependToMemberExpression.ts"],"sourcesContent":["import { memberExpression } from \"../builders/generated/index.ts\";\nimport { isSuper } from \"../index.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Prepend a node to a member expression.\n */\nexport default function prependToMemberExpression<\n  T extends Pick<t.MemberExpression, \"object\" | \"property\">,\n>(member: T, prepend: t.MemberExpression[\"object\"]): T {\n  if (isSuper(member.object)) {\n    throw new Error(\n      \"Cannot prepend node to super property access (`super.foo`).\",\n    );\n  }\n  member.object = memberExpression(prepend, member.object);\n\n  return member;\n}\n"]},"metadata":{},"sourceType":"script"}