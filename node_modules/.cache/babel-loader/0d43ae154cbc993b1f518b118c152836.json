{"ast":null,"code":"import { combineReducers } from 'redux';\nimport contactsReducer, { initializeContacts } from './contactsSlice';\nimport authReducer from './authSlice';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['contacts', 'auth']\n};\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n  auth: authReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: ['persist/PERSIST']\n    }\n  })\n});\nstore.dispatch(initializeContacts());\nconst persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"names":["combineReducers","contactsReducer","initializeContacts","authReducer","configureStore","persistStore","persistReducer","storage","persistConfig","key","whitelist","rootReducer","contacts","auth","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","dispatch","persistor"],"sources":["D:/GitHub/goit-react-hw-08-phonebook/src/redux/store.js"],"sourcesContent":["import { combineReducers } from 'redux';\nimport contactsReducer, { initializeContacts } from './contactsSlice';\nimport authReducer from './authSlice'; \nimport { configureStore } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['contacts', 'auth'],\n};\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n  auth: authReducer, \n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: ['persist/PERSIST'],\n      },\n    }),\n});\n\n\nstore.dispatch(initializeContacts());\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;AACvC,OAAOC,eAAe,IAAIC,kBAAkB,QAAQ,iBAAiB;AACrE,OAAOC,WAAW,MAAM,aAAa;AACrC,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAC5D,OAAOC,OAAO,MAAM,2BAA2B;AAE/C,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXF,OAAO;EACPG,SAAS,EAAE,CAAC,UAAU,EAAE,MAAM;AAChC,CAAC;AAED,MAAMC,WAAW,GAAGX,eAAe,CAAC;EAClCY,QAAQ,EAAEX,eAAe;EACzBY,IAAI,EAAEV;AACR,CAAC,CAAC;AAEF,MAAMW,gBAAgB,GAAGR,cAAc,CAACE,aAAa,EAAEG,WAAW,CAAC;AAEnE,MAAMI,KAAK,GAAGX,cAAc,CAAC;EAC3BY,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAAC,iBAAiB;IACpC;EACF,CAAC;AACL,CAAC,CAAC;AAGFL,KAAK,CAACM,QAAQ,CAACnB,kBAAkB,CAAC,CAAC,CAAC;AAEpC,MAAMoB,SAAS,GAAGjB,YAAY,CAACU,KAAK,CAAC;AAErC,SAASA,KAAK,EAAEO,SAAS"},"metadata":{},"sourceType":"module"}