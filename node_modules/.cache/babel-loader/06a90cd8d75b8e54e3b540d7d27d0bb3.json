{"ast":null,"code":"import { combineReducers } from 'redux';\nimport contactsReducer, { fetchContacts } from './contactsSlice';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['contacts', 'auth']\n};\nconst rootReducer = combineReducers({\n  contacts: contactsReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: ['persist/PERSIST']\n    }\n  })\n});\nconst initStore = async () => {\n  await store.dispatch(fetchContacts());\n};\ninitStore();\nconst persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"names":["combineReducers","contactsReducer","fetchContacts","configureStore","persistStore","persistReducer","storage","persistConfig","key","whitelist","rootReducer","contacts","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","initStore","dispatch","persistor"],"sources":["D:/GitHub/goit-react-hw-08-phonebook/src/components/redux/store.js"],"sourcesContent":["import { combineReducers } from 'redux';\r\nimport contactsReducer, { fetchContacts } from './contactsSlice';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  whitelist: ['contacts', 'auth'],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n \r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: ['persist/PERSIST'],\r\n      },\r\n    }),\r\n});\r\n\r\nconst initStore = async () => {\r\n  await store.dispatch(fetchContacts());\r\n};\r\n\r\ninitStore();\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;AACvC,OAAOC,eAAe,IAAIC,aAAa,QAAQ,iBAAiB;AAChE,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAC5D,OAAOC,OAAO,MAAM,2BAA2B;AAG/C,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXF,OAAO;EACPG,SAAS,EAAE,CAAC,UAAU,EAAE,MAAM;AAChC,CAAC;AAED,MAAMC,WAAW,GAAGV,eAAe,CAAC;EAClCW,QAAQ,EAAEV;AAEZ,CAAC,CAAC;AAEF,MAAMW,gBAAgB,GAAGP,cAAc,CAACE,aAAa,EAAEG,WAAW,CAAC;AAEnE,MAAMG,KAAK,GAAGV,cAAc,CAAC;EAC3BW,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAAC,iBAAiB;IACpC;EACF,CAAC;AACL,CAAC,CAAC;AAEF,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;EAC5B,MAAMN,KAAK,CAACO,QAAQ,CAAClB,aAAa,CAAC,CAAC,CAAC;AACvC,CAAC;AAEDiB,SAAS,CAAC,CAAC;AAEX,MAAME,SAAS,GAAGjB,YAAY,CAACS,KAAK,CAAC;AAErC,SAASA,KAAK,EAAEQ,SAAS"},"metadata":{},"sourceType":"module"}