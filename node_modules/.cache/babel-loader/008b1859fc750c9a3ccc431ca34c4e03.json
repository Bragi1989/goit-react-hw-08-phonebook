{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ensureBlock;\nvar _toBlock = require(\"./toBlock.js\");\nfunction ensureBlock(node) {\n  let key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"body\";\n  const result = (0, _toBlock.default)(node[key], node);\n  node[key] = result;\n  return result;\n}","map":{"version":3,"mappings":";;;;;;AAAA;AASe,SAASA,WAAWA,CACjCC,IAAY,EAEM;EAAA,IADlBC,GAAW,uEAAG,MAAM;EAGpB,MAAMC,MAAM,GAAG,oBAAO,EAACF,IAAI,CAACC,GAAG,CAAC,EAAED,IAAI,CAAC;EAEvCA,IAAI,CAACC,GAAG,CAAC,GAAGC,MAAM;EAClB,OAAOA,MAAM;AACf","names":["ensureBlock","node","key","result"],"sources":["D:\\GitHub\\goit-react-hw-08-phonebook\\node_modules\\@babel\\types\\src\\converters\\ensureBlock.ts"],"sourcesContent":["import toBlock from \"./toBlock.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Ensure the `key` (defaults to \"body\") of a `node` is a block.\n * Casting it to a block if it is not.\n *\n * Returns the BlockStatement\n */\nexport default function ensureBlock(\n  node: t.Node,\n  key: string = \"body\",\n): t.BlockStatement {\n  // @ts-expect-error Fixme: key may not exist in node, consider remove key = \"body\"\n  const result = toBlock(node[key], node);\n  // @ts-expect-error Fixme: key may not exist in node, consider remove key = \"body\"\n  node[key] = result;\n  return result;\n}\n"]},"metadata":{},"sourceType":"script"}