{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const fetchContacts = createAsyncThunk('contacts/fetchContacts', async (_, _ref) => {\n  let {\n    getState,\n    rejectWithValue\n  } = _ref;\n  const token = getState().auth.token;\n  try {\n    const response = await axios.get('https://connections-api.herokuapp.com/contacts', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const addContact = createAsyncThunk('contacts/addContact', async (newContact, _ref2) => {\n  let {\n    getState,\n    rejectWithValue\n  } = _ref2;\n  const token = getState().auth.token;\n  try {\n    const response = await axios.post('https://connections-api.herokuapp.com/contacts', newContact, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const deleteContact = createAsyncThunk('contacts/deleteContact', async (contactId, _ref3) => {\n  let {\n    getState,\n    rejectWithValue\n  } = _ref3;\n  const token = getState().auth.token;\n  try {\n    await axios.delete(`https://connections-api.herokuapp.com/contacts/${contactId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return contactId;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const updateFilterAction = filter => ({\n  type: 'contacts/updateFilter',\n  payload: filter\n});\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: {\n    items: [],\n    status: null,\n    error: null,\n    filter: ''\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchContacts.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchContacts.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.items = action.payload;\n    }).addCase(fetchContacts.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    }).addCase(addContact.fulfilled, (state, action) => {\n      state.items.push(action.payload);\n    }).addCase(deleteContact.fulfilled, (state, action) => {\n      state.items = state.items.filter(contact => contact.id !== action.payload);\n    }).addCase(updateFilterAction, (state, action) => {\n      state.filter = action.payload;\n    });\n  }\n});\nexport const selectContacts = state => {\n  const {\n    items,\n    filter\n  } = state.contacts;\n  return filter ? items.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase())) : items;\n};\nexport const selectFilter = state => state.contacts.filter;\nexport default contactsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchContacts","_","_ref","getState","rejectWithValue","token","auth","response","get","headers","Authorization","data","error","addContact","newContact","_ref2","post","deleteContact","contactId","_ref3","delete","updateFilterAction","filter","type","payload","contactsSlice","name","initialState","items","status","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","rejected","push","contact","id","selectContacts","contacts","toLowerCase","includes","selectFilter","reducer"],"sources":["D:/GitHub/goit-react-hw-08-phonebook/src/redux/contactsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const fetchContacts = createAsyncThunk('contacts/fetchContacts', async (_, { getState, rejectWithValue }) => {\n  const token = getState().auth.token;\n  try {\n    const response = await axios.get('https://connections-api.herokuapp.com/contacts', {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\n\nexport const addContact = createAsyncThunk('contacts/addContact', async (newContact, { getState, rejectWithValue }) => {\n  const token = getState().auth.token;\n  try {\n    const response = await axios.post('https://connections-api.herokuapp.com/contacts', newContact, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\n\nexport const deleteContact = createAsyncThunk('contacts/deleteContact', async (contactId, { getState, rejectWithValue }) => {\n  const token = getState().auth.token;\n  try {\n    await axios.delete(`https://connections-api.herokuapp.com/contacts/${contactId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    return contactId;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\n\nexport const updateFilterAction = (filter) => ({\n  type: 'contacts/updateFilter',\n  payload: filter,\n});\n\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: { items: [], status: null, error: null, filter: '' },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchContacts.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchContacts.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.items = action.payload;\n      })\n      .addCase(fetchContacts.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.payload;\n      })\n      .addCase(addContact.fulfilled, (state, action) => {\n        state.items.push(action.payload);\n      })\n      .addCase(deleteContact.fulfilled, (state, action) => {\n        state.items = state.items.filter((contact) => contact.id !== action.payload);\n      })\n      .addCase(updateFilterAction, (state, action) => {\n        state.filter = action.payload;\n      });\n  },\n});\n\nexport const selectContacts = (state) => {\n  const { items, filter } = state.contacts;\n  return filter ? items.filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase())) : items;\n};\n\nexport const selectFilter = (state) => state.contacts.filter;\n\nexport default contactsSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}