{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { selectUser } from './authSlice';\nimport { createSelector } from 'reselect';\nconst baseUrl = 'https://connections-api.herokuapp.com';\nexport const fetchContacts = createAsyncThunk('contacts/fetchAll', async (_, thunkAPI) => {\n  const user = selectUser(thunkAPI.getState());\n  if (!user) {\n    return [];\n  }\n  try {\n    const response = await axios.get(`${baseUrl}/contacts`, {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n});\nexport const addContact = createAsyncThunk('contacts/addContact', async (contact, thunkAPI) => {\n  const user = selectUser(thunkAPI.getState());\n  if (!user) {\n    throw new Error('User is not authenticated');\n  }\n  try {\n    const response = await axios.post(`${baseUrl}/contacts`, contact, {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n});\nexport const deleteContact = createAsyncThunk('contacts/deleteContact', async (contactId, thunkAPI) => {\n  const user = selectUser(thunkAPI.getState());\n  if (!user) {\n    throw new Error('User is not authenticated');\n  }\n  await axios.delete(`${baseUrl}/contacts/${contactId}`, {\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  });\n  return contactId;\n});\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: {\n    items: [],\n    filter: ''\n  },\n  reducers: {\n    updateFilter: (state, action) => {\n      state.filter = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchContacts.fulfilled, (state, action) => {\n      state.items = action.payload;\n    }).addCase(addContact.fulfilled, (state, action) => {\n      state.items.push(action.payload);\n    }).addCase(deleteContact.fulfilled, (state, action) => {\n      state.items = state.items.filter(contact => contact.id !== action.payload);\n    });\n  }\n});\nexport const {\n  updateFilter: updateFilterAction\n} = contactsSlice.actions;\nexport const selectFilter = state => state.contacts.filter;\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilteredContacts = createSelector([selectContacts, selectFilter], (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter) || contact.number.toLowerCase().includes(normalizedFilter));\n});\nexport default contactsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","toast","selectUser","createSelector","baseUrl","fetchContacts","_","thunkAPI","user","getState","response","get","headers","Authorization","token","data","error","addContact","contact","Error","post","deleteContact","contactId","delete","contactsSlice","name","initialState","items","filter","reducers","updateFilter","state","action","payload","extraReducers","builder","addCase","fulfilled","push","id","updateFilterAction","actions","selectFilter","contacts","selectContacts","selectFilteredContacts","normalizedFilter","toLowerCase","includes","number","reducer"],"sources":["D:/GitHub/goit-react-hw-08-phonebook/src/redux/contactsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { selectUser } from './authSlice';\nimport { createSelector } from 'reselect';\n\nconst baseUrl = 'https://connections-api.herokuapp.com';\n\nexport const fetchContacts = createAsyncThunk('contacts/fetchAll', async (_, thunkAPI) => {\n  const user = selectUser(thunkAPI.getState());\n\n  if (!user) {\n    return [];\n  }\n\n  try {\n    const response = await axios.get(`${baseUrl}/contacts`, {\n      headers: {\n        Authorization: `Bearer ${user.token}`,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n});\n\nexport const addContact = createAsyncThunk('contacts/addContact', async (contact, thunkAPI) => {\n  const user = selectUser(thunkAPI.getState());\n\n  if (!user) {\n    throw new Error('User is not authenticated');\n  }\n\n  try {\n    const response = await axios.post(`${baseUrl}/contacts`, contact, {\n      headers: {\n        Authorization: `Bearer ${user.token}`,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n});\n\nexport const deleteContact = createAsyncThunk('contacts/deleteContact', async (contactId, thunkAPI) => {\n  const user = selectUser(thunkAPI.getState());\n\n  if (!user) {\n    throw new Error('User is not authenticated');\n  }\n\n  await axios.delete(`${baseUrl}/contacts/${contactId}`, {\n    headers: {\n      Authorization: `Bearer ${user.token}`,\n    },\n  });\n  return contactId;\n});\n\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: {\n    items: [],\n    filter: '',\n  },\n  reducers: {\n    updateFilter: (state, action) => {\n      state.filter = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchContacts.fulfilled, (state, action) => {\n        state.items = action.payload;\n      })\n      .addCase(addContact.fulfilled, (state, action) => {\n        state.items.push(action.payload);\n      })\n      .addCase(deleteContact.fulfilled, (state, action) => {\n        state.items = state.items.filter((contact) => contact.id !== action.payload);\n      });\n  },\n});\n\nexport const { updateFilter: updateFilterAction } = contactsSlice.actions;\nexport const selectFilter = (state) => state.contacts.filter;\n\nexport const selectContacts = (state) => state.contacts.items;\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter) ||\n      contact.number.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n\nexport default contactsSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}