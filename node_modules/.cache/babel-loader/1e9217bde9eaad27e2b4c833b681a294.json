{"ast":null,"code":"import { createSlice, isAnyOf } from '@reduxjs/toolkit';\nimport { logOutThunk, loginThunk, refreshThunk, registerThunk } from './operations';\nimport { toast } from 'react-toastify';\nconst initialState = {\n  isLoading: false,\n  error: null,\n  authenticated: false,\n  token: null,\n  userData: null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {},\n  extraReducers: builder => builder.addCase(loginThunk.fulfilled, (state, _ref) => {\n    let {\n      payload\n    } = _ref;\n    state.isLoading = false;\n    state.authenticated = true;\n    state.token = payload.token;\n    state.userData = payload.user;\n  }).addCase(registerThunk.fulfilled, (state, _ref2) => {\n    let {\n      payload\n    } = _ref2;\n    state.isLoading = false;\n    state.authenticated = true;\n    state.token = payload.token;\n    state.userData = payload.user;\n  }).addCase(logOutThunk.fulfilled, () => {\n    return initialState;\n  }).addCase(refreshThunk.fulfilled, (state, _ref3) => {\n    let {\n      payload\n    } = _ref3;\n    state.isLoading = false;\n    state.authenticated = true;\n    state.userData = payload;\n  }).addMatcher(isAnyOf(loginThunk.pending, registerThunk.pending, refreshThunk.pending, logOutThunk.pending), state => {\n    state.isLoading = true;\n    state.error = null;\n  }).addMatcher(isAnyOf(loginThunk.rejected, registerThunk.rejected, refreshThunk.rejected, logOutThunk.rejected), (state, _ref4) => {\n    let {\n      payload\n    } = _ref4;\n    state.isLoading = false;\n    state.error = payload;\n    toast.info('Incorrectly entered data ! Please enter correct information!', {});\n  })\n});\nexport const authReducer = authSlice.reducer;","map":{"version":3,"names":["createSlice","isAnyOf","logOutThunk","loginThunk","refreshThunk","registerThunk","toast","initialState","isLoading","error","authenticated","token","userData","authSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","_ref","payload","user","_ref2","_ref3","addMatcher","pending","rejected","_ref4","info","authReducer","reducer"],"sources":["D:/GitHub/goit-react-hw-08-phonebook/src/redux/auth/slice.jsx"],"sourcesContent":["import { createSlice, isAnyOf } from '@reduxjs/toolkit';\nimport {\n  logOutThunk,\n  loginThunk,\n  refreshThunk,\n  registerThunk,\n} from './operations';\nimport { toast } from 'react-toastify';\n\nconst initialState = {\n  isLoading: false,\n  error: null,\n  authenticated: false,\n  token: null,\n  userData: null,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {},\n  extraReducers: builder =>\n    builder\n      .addCase(loginThunk.fulfilled, (state, { payload }) => {\n        state.isLoading = false;\n        state.authenticated = true;\n        state.token = payload.token;\n        state.userData = payload.user;\n      })\n      .addCase(registerThunk.fulfilled, (state, { payload }) => {\n        state.isLoading = false;\n        state.authenticated = true;\n        state.token = payload.token;\n        state.userData = payload.user;\n      })\n      .addCase(logOutThunk.fulfilled, () => {\n        return initialState;\n      })\n      .addCase(refreshThunk.fulfilled, (state, { payload }) => {\n        state.isLoading = false;\n        state.authenticated = true;\n        state.userData = payload;\n      })\n\n      .addMatcher(\n        isAnyOf(\n          loginThunk.pending,\n          registerThunk.pending,\n          refreshThunk.pending,\n          logOutThunk.pending\n        ),\n        state => {\n          state.isLoading = true;\n          state.error = null;\n        }\n      )\n      .addMatcher(\n        isAnyOf(\n          loginThunk.rejected,\n          registerThunk.rejected,\n          refreshThunk.rejected,\n          logOutThunk.rejected\n        ),\n        (state, { payload }) => {\n          state.isLoading = false;\n          state.error = payload;\n          toast.info(\n            'Incorrectly entered data ! Please enter correct information!',\n            {}\n          );\n        }\n      ),\n});\n\nexport const authReducer = authSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,OAAO,QAAQ,kBAAkB;AACvD,SACEC,WAAW,EACXC,UAAU,EACVC,YAAY,EACZC,aAAa,QACR,cAAc;AACrB,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE,IAAI;EACXC,aAAa,EAAE,KAAK;EACpBC,KAAK,EAAE,IAAI;EACXC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,SAAS,GAAGb,WAAW,CAAC;EAC5Bc,IAAI,EAAE,MAAM;EACZP,YAAY;EACZQ,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAEC,OAAO,IACpBA,OAAO,CACJC,OAAO,CAACf,UAAU,CAACgB,SAAS,EAAE,CAACC,KAAK,EAAAC,IAAA,KAAkB;IAAA,IAAhB;MAAEC;IAAQ,CAAC,GAAAD,IAAA;IAChDD,KAAK,CAACZ,SAAS,GAAG,KAAK;IACvBY,KAAK,CAACV,aAAa,GAAG,IAAI;IAC1BU,KAAK,CAACT,KAAK,GAAGW,OAAO,CAACX,KAAK;IAC3BS,KAAK,CAACR,QAAQ,GAAGU,OAAO,CAACC,IAAI;EAC/B,CAAC,CAAC,CACDL,OAAO,CAACb,aAAa,CAACc,SAAS,EAAE,CAACC,KAAK,EAAAI,KAAA,KAAkB;IAAA,IAAhB;MAAEF;IAAQ,CAAC,GAAAE,KAAA;IACnDJ,KAAK,CAACZ,SAAS,GAAG,KAAK;IACvBY,KAAK,CAACV,aAAa,GAAG,IAAI;IAC1BU,KAAK,CAACT,KAAK,GAAGW,OAAO,CAACX,KAAK;IAC3BS,KAAK,CAACR,QAAQ,GAAGU,OAAO,CAACC,IAAI;EAC/B,CAAC,CAAC,CACDL,OAAO,CAAChB,WAAW,CAACiB,SAAS,EAAE,MAAM;IACpC,OAAOZ,YAAY;EACrB,CAAC,CAAC,CACDW,OAAO,CAACd,YAAY,CAACe,SAAS,EAAE,CAACC,KAAK,EAAAK,KAAA,KAAkB;IAAA,IAAhB;MAAEH;IAAQ,CAAC,GAAAG,KAAA;IAClDL,KAAK,CAACZ,SAAS,GAAG,KAAK;IACvBY,KAAK,CAACV,aAAa,GAAG,IAAI;IAC1BU,KAAK,CAACR,QAAQ,GAAGU,OAAO;EAC1B,CAAC,CAAC,CAEDI,UAAU,CACTzB,OAAO,CACLE,UAAU,CAACwB,OAAO,EAClBtB,aAAa,CAACsB,OAAO,EACrBvB,YAAY,CAACuB,OAAO,EACpBzB,WAAW,CAACyB,OACd,CAAC,EACDP,KAAK,IAAI;IACPA,KAAK,CAACZ,SAAS,GAAG,IAAI;IACtBY,KAAK,CAACX,KAAK,GAAG,IAAI;EACpB,CACF,CAAC,CACAiB,UAAU,CACTzB,OAAO,CACLE,UAAU,CAACyB,QAAQ,EACnBvB,aAAa,CAACuB,QAAQ,EACtBxB,YAAY,CAACwB,QAAQ,EACrB1B,WAAW,CAAC0B,QACd,CAAC,EACD,CAACR,KAAK,EAAAS,KAAA,KAAkB;IAAA,IAAhB;MAAEP;IAAQ,CAAC,GAAAO,KAAA;IACjBT,KAAK,CAACZ,SAAS,GAAG,KAAK;IACvBY,KAAK,CAACX,KAAK,GAAGa,OAAO;IACrBhB,KAAK,CAACwB,IAAI,CACR,8DAA8D,EAC9D,CAAC,CACH,CAAC;EACH,CACF;AACN,CAAC,CAAC;AAEF,OAAO,MAAMC,WAAW,GAAGlB,SAAS,CAACmB,OAAO"},"metadata":{},"sourceType":"module"}